import {
  FileText,
  Download,
  ArrowLeft,
  RotateCcw,
  AlertTriangle,
  CheckCircle,
  Clock,
  User,
  Shield,
  Search,
  TrendingUp,
  MapPin,
  Phone,
  MessageSquare,
} from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { ScrollArea } from "@/components/ui/scroll-area";

export function SummaryScreen({ data, queryResults, onBack, onNewInvestigation }) {
  const totalFindings = queryResults.reduce((total, query) => total + query.resultCount, 0);
  const highPriorityFindings = queryResults.reduce(
    (total, query) => total + query.results.filter((result) => result.relevance === "high").length,
    0
  );

  const generateReport = () => {
    // In a real application, this would generate and download a PDF report
    const reportContent = `
DIGITAL FORENSIC INVESTIGATION REPORT
=====================================

Case Information:
- Case Number: ${data.caseNumber}
- Investigating Officer: ${data.officerName}
- Investigation Date: ${new Date(data.uploadDate).toLocaleDateString()}
- Report Generated: ${new Date().toLocaleDateString()}

Data Summary:
- Total Records Processed: ${data.totalRecords.toLocaleString()}
- Files Analyzed: ${data.files.length}
- Queries Executed: ${queryResults.length}
- Total Findings: ${totalFindings}
- High Priority Findings: ${highPriorityFindings}

Key Findings:
${queryResults
  .map(
    (query) => `
Query: ${query.text}
Results: ${query.resultCount}
${query.results.map((result) => `- ${result.type}: ${result.message || result.contact || result.filename} (${result.relevance} priority)`).join("\n")}
`
  )
  .join("\n")}

Recommendations:
- Further investigation recommended for high priority findings
- Cross-reference findings with other evidence sources
- Consider additional forensic analysis if required

This report was generated by the UFDR Investigation Platform.
    `;

    const blob = new Blob([reportContent], { type: "text/plain" });
    const url = URL.createObjectURL(blob);
    const a = document.createElement("a");
    a.href = url;
    a.download = `Investigation_Report_${data.caseNumber}_${new Date().toISOString().split("T")[0]}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  const getKeyInsights = () => {
    const insights = [];

    if (highPriorityFindings > 0) {
      insights.push({
        type: "warning",
        title: "High Priority Evidence Found",
        description: `${highPriorityFindings} high-priority finding${highPriorityFindings !== 1 ? "s" : ""} require immediate attention`,
        icon: AlertTriangle,
        color: "text-red-600",
      });
    }

    const cryptoFindings = queryResults.some(
      (query) => query.text.toLowerCase().includes("crypto") && query.resultCount > 0
    );
    if (cryptoFindings) {
      insights.push({
        type: "info",
        title: "Cryptocurrency Activity Detected",
        description: "Digital currency transactions or wallet addresses found in communications",
        icon: TrendingUp,
        color: "text-orange-600",
      });
    }

    const foreignContacts = queryResults.some(
      (query) => query.text.toLowerCase().includes("foreign") && query.resultCount > 0
    );
    if (foreignContacts) {
      insights.push({
        type: "info",
        title: "International Communications",
        description: "Communications with foreign phone numbers detected",
        icon: Phone,
        color: "text-blue-600",
      });
    }

    if (insights.length === 0) {
      insights.push({
        type: "success",
        title: "Investigation Complete",
        description: "All queries processed successfully with no critical findings",
        icon: CheckCircle,
        color: "text-green-600",
      });
    }

    return insights;
  };

  return (
    <div className="max-w-6xl mx-auto space-y-6">
      {/* Header */}
      <div className="space-y-2">
        <h1 className="text-3xl font-bold">Investigation Summary Report</h1>
        <p className="text-muted-foreground">
          Comprehensive analysis results and key findings from your UFDR investigation
        </p>
      </div>

      {/* Executive Summary */}
      <Card className="bg-gradient-to-r from-blue-50 to-indigo-50 border-blue-200">
        <CardHeader>
          <CardTitle className="flex items-center space-x-2">
            <Shield className="h-6 w-6 text-blue-600" />
            <span>Executive Summary</span>
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
            <div className="text-center">
              <div className="text-3xl font-bold text-blue-600">
                {data.totalRecords.toLocaleString()}
              </div>
              <p className="text-sm text-muted-foreground">Total Records</p>
            </div>
            <div className="text-center">
              <div className="text-3xl font-bold text-blue-600">{queryResults.length}</div>
              <p className="text-sm text-muted-foreground">Queries Executed</p>
            </div>
            <div className="text-center">
              <div className="text-3xl font-bold text-blue-600">{totalFindings}</div>
              <p className="text-sm text-muted-foreground">Total Findings</p>
            </div>
            <div className="text-center">
              <div className="text-3xl font-bold text-red-600">{highPriorityFindings}</div>
              <p className="text-sm text-muted-foreground">High Priority</p>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Key Insights */}
      <Card>
        <CardHeader>
          <CardTitle>Key Insights</CardTitle>
          <CardDescription>
            Important findings and recommendations from the analysis
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {getKeyInsights().map((insight, index) => {
              const Icon = insight.icon;
              return (
                <div key={index} className="flex items-start space-x-3 p-4 border rounded-lg">
                  <Icon className={`h-6 w-6 ${insight.color} flex-shrink-0 mt-0.5`} />
                  <div>
                    <h3 className="font-semibold">{insight.title}</h3>
                    <p className="text-sm text-muted-foreground">{insight.description}</p>
                  </div>
                </div>
              );
            })}
          </div>
        </CardContent>
      </Card>

      {/* Detailed Findings */}
      <Card>
        <CardHeader>
          <CardTitle>Detailed Findings</CardTitle>
          <CardDescription>Complete breakdown of all query results and evidence</CardDescription>
        </CardHeader>
        <CardContent>
          <ScrollArea className="h-[400px]">
            <div className="space-y-4">
              {queryResults.map((query, index) => (
                <div key={index} className="border rounded-lg p-4">
                  <div className="flex items-center justify-between mb-3">
                    <h3 className="font-semibold">{query.text}</h3>
                    <div className="flex items-center space-x-2">
                      <Badge variant="secondary">{query.resultCount} results</Badge>
                      <Badge variant="outline">
                        <Clock className="h-3 w-3 mr-1" />
                        {new Date(query.timestamp).toLocaleTimeString()}
                      </Badge>
                    </div>
                  </div>

                  <div className="space-y-2">
                    {query.results.map((result, resultIndex) => (
                      <div key={resultIndex} className="bg-muted p-3 rounded text-sm">
                        <div className="flex items-center justify-between mb-1">
                          <span className="font-medium capitalize">{result.type}</span>
                          <Badge
                            variant={
                              result.relevance === "high"
                                ? "destructive"
                                : result.relevance === "medium"
                                  ? "default"
                                  : "secondary"
                            }
                          >
                            {result.relevance}
                          </Badge>
                        </div>
                        <p className="text-muted-foreground">
                          {result.message || result.contact || result.filename}
                        </p>
                        <p className="text-xs text-muted-foreground mt-1">{result.timestamp}</p>
                      </div>
                    ))}
                  </div>
                </div>
              ))}
            </div>
          </ScrollArea>
        </CardContent>
      </Card>

      {/* Case Information */}
      <Card>
        <CardHeader>
          <CardTitle>Case Information</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div className="space-y-3">
              <div>
                <p className="text-sm font-medium text-muted-foreground">Case Number</p>
                <p className="font-semibold">{data.caseNumber}</p>
              </div>
              <div>
                <p className="text-sm font-medium text-muted-foreground">Investigating Officer</p>
                <p className="font-semibold">{data.officerName}</p>
              </div>
              <div>
                <p className="text-sm font-medium text-muted-foreground">Investigation Date</p>
                <p className="font-semibold">{new Date(data.uploadDate).toLocaleDateString()}</p>
              </div>
            </div>
            <div className="space-y-3">
              <div>
                <p className="text-sm font-medium text-muted-foreground">Files Processed</p>
                <p className="font-semibold">
                  {data.files.length} UFDR file{data.files.length !== 1 ? "s" : ""}
                </p>
              </div>
              <div>
                <p className="text-sm font-medium text-muted-foreground">Report Generated</p>
                <p className="font-semibold">{new Date().toLocaleDateString()}</p>
              </div>
              <div>
                <p className="text-sm font-medium text-muted-foreground">Analysis Duration</p>
                <p className="font-semibold">
                  {Math.round((new Date() - new Date(data.uploadDate)) / (1000 * 60))} minutes
                </p>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Recommendations */}
      <Card className="bg-yellow-50 border-yellow-200">
        <CardHeader>
          <CardTitle className="flex items-center space-x-2">
            <AlertTriangle className="h-5 w-5 text-yellow-600" />
            <span>Recommendations</span>
          </CardTitle>
        </CardHeader>
        <CardContent>
          <ul className="space-y-2 text-sm">
            <li className="flex items-start space-x-2">
              <span className="text-yellow-600">•</span>
              <span>Review all high-priority findings for potential evidence</span>
            </li>
            <li className="flex items-start space-x-2">
              <span className="text-yellow-600">•</span>
              <span>Cross-reference findings with other investigation materials</span>
            </li>
            <li className="flex items-start space-x-2">
              <span className="text-yellow-600">•</span>
              <span>Consider additional forensic analysis for suspicious communications</span>
            </li>
            <li className="flex items-start space-x-2">
              <span className="text-yellow-600">•</span>
              <span>Document chain of custody for all digital evidence</span>
            </li>
            <li className="flex items-start space-x-2">
              <span className="text-yellow-600">•</span>
              <span>Prepare detailed report for legal proceedings if required</span>
            </li>
          </ul>
        </CardContent>
      </Card>

      {/* Actions */}
      <div className="flex flex-col sm:flex-row gap-4">
        <Button onClick={generateReport} className="flex-1">
          <Download className="mr-2 h-4 w-4" />
          Download Full Report
        </Button>
        <Button variant="outline" onClick={onBack} className="flex-1">
          <ArrowLeft className="mr-2 h-4 w-4" />
          Back to Queries
        </Button>
        <Button variant="outline" onClick={onNewInvestigation} className="flex-1">
          <RotateCcw className="mr-2 h-4 w-4" />
          New Investigation
        </Button>
      </div>
    </div>
  );
}
